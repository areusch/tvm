# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# This `pyproject.toml` file is used to allow MicroTVM
# to run within a Poetry-managed environment.

[tool.black]
line-length = 100
target-version = ['py36']
include = '(\.pyi?$)'
exclude = '''

(
  /(
      \.github
    | \.tvm
    | \.tvm_test_data
    | \.vscode
    | \.venv
    | 3rdparty
    | build\/
    | cmake\/
    | conda\/
    | docker\/
    | docs\/
    | golang\/
    | include\/
    | jvm\/
    | licenses\/
    | nnvm\/
    | rust\/
    | src\/
    | vta\/
    | web\/
  )/
)
'''
[tool.poetry]
name = "microtvm"
version = "0.1.0"
description = ""
authors = []
packages = [
    { include = "tvm", from = "../../python" },
]

[tool.poetry.dependencies]
python = ">=3.6.1,<4.0"
attrs = "*"
cloudpickle = "*"
coremltools = { version = "*", optional = true }
decorator = "*"
dgl = { version = "*", optional = true }
ethos-u-vela = { version = "==2.1.1", optional = true }
future = { version = "*", optional = true }
h5py = { version = "<3.0", optional = true }
keras = { version = "==2.4.3", optional = true }
mxnet = { version = "==1.6.0", optional = true }
numpy = "*"
onnx = { version = "^1.8.0", optional = true }
onnxruntime = { version = "==1.7.0", optional = true }
opencv-python = { version = "*", optional = true }
paddlepaddle = { version = "==2.1.2", optional = true }
psutil = "*"
scipy = "*"
synr = "==0.3.0"
tensorflow = { version = "==2.4.2", optional = true }
tensorflow-estimator = { version = "*", optional = true }
tflite = { version = "*", optional = true }
torch = { version = "==1.7.0", optional = true }
torchvision = { version = "==0.8.1", optional = true }
tornado = "*"
xgboost = { version = ">=1.1.0", optional = true }
[tool.poetry.extras]
ethosu = ['ethos-u-vela']
importer-caffe2 = ['future', 'torch']
importer-coreml = ['coremltools']
importer-darknet = ['opencv-python']
importer-keras = ['h5py', 'keras', 'tensorflow', 'tensorflow-estimator']
importer-mxnet = ['mxnet']
importer-onnx = ['future', 'onnx', 'onnxruntime', 'torch', 'torchvision']
importer-paddlepaddle = ['paddlepaddle']
importer-pytorch = ['future', 'torch', 'torchvision']
importer-tensorflow = ['tensorflow', 'tensorflow-estimator']
importer-tflite = ['keras', 'tensorflow', 'tensorflow-estimator', 'tflite']
tutorial-dgl = ['dgl']
tutorial-gluoncv = ['gluoncv']
tvmc = ['future', 'onnx', 'onnxruntime', 'tensorflow', 'tflite', 'torch', 'torchvision', 'xgboost']
xgboost = ['future', 'torch', 'xgboost']
[tool.poetry.dev-dependencies]
astroid = "*"
autodocsumm = "*"
black = "==20.8b1"
commonmark = ">=0.7.3"
cpplint = "==1.5.5"
docutils = "<0.17"
flake8 = "==3.9.2"
image = "*"
matplotlib = "*"
mypy = "==0.902"
pillow = "*"
pylint = "==2.10.2"
sphinx = "*"
sphinx_autodoc_annotation = "*"
sphinx_gallery = "*"
sphinx_rtd_theme = "*"
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.autopep8]
max_line_length = 100
